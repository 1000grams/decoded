AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'Serverless stack for DecodedMusic backend'
Globals:
  Function:
    Timeout: 10
    Runtime: nodejs18.x
    MemorySize: 128

Resources:
  S3CatalogIngestFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      CodeUri: lambda/s3CatalogIngest/
      Environment:
        Variables:
          TABLE_NAME: prod-DecodedCatalog-decodedmusic-backend
          AWS_REGION: eu-central-1
      Policies:
        - AWSLambdaBasicExecutionRole
        - S3ReadPolicy:
            BucketName: decodedmusic-artist-catalog
        - DynamoDBCrudPolicy:
            TableName: prod-DecodedCatalog-decodedmusic-backend
      Events:
        OnCatalogUpload:
          Type: S3
          Properties:
            Bucket: decodedmusic-artist-catalog
            Events: s3:ObjectCreated:*

  ViralPredictionsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      CodeUri: lambda/viralPredictionsFunction/
      Environment:
        Variables:
          VIRAL_TABLE_NAME: prod-ViralPrediction-decodedmusic-backend
          AWS_REGION: eu-central-1
      Policies:
        - AWSLambdaBasicExecutionRole
        - DynamoDBReadPolicy:
            TableName: prod-ViralPrediction-decodedmusic-backend
      Events:
        GetViralPredictionsApi:
          Type: Api
          Properties:
            Path: /viral-predictions
            Method: get
            Cors: true

  EnhancedSpotifyDashboardFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: enhanced-spotify-dashboard.handler
      CodeUri: lambda/
      Environment:
        Variables:
          AWS_REGION: eu-central-1
      Policies:
        - AWSLambdaBasicExecutionRole
        - DynamoDBReadPolicy:
            TableName: prod-TrendPrediction-decodedmusic-backend
      Events:
        GetSpotifyDataApi:
          Type: Api
          Properties:
            Path: /spotify-data
            Method: get
            Cors: true

Outputs:
  ApiUrl:
    Description: 'Base URL for API endpoints'
    Value:
      Fn::Sub: 'https://${ServerlessRestApi}.execute-api.eu-central-1.amazonaws.com/Prod'
